---
 drivers/mtd/nand/spi/core.c    | 4 +++-
 drivers/mtd/nand/spi/winbond.c | 6 ++++--
 include/linux/mtd/spinand.h    | 4 ++++
 3 files changed, 11 insertions(+), 3 deletions(-)

diff --git a/drivers/mtd/nand/spi/core.c b/drivers/mtd/nand/spi/core.c
index 7ea31890f..994e37b64 100644
--- a/drivers/mtd/nand/spi/core.c
+++ b/drivers/mtd/nand/spi/core.c
@@ -305,7 +305,7 @@ static int spinand_write_to_cache_op(struct spinand_device *spinand,
 	wdesc = spinand->dirmaps[req->pos.plane].wdesc;
 
 	/* Workaround for some stupid chips which write full zero ecc when write to non-ECC OOB */
-	if(!req->datalen)
+	if(spinand->onchip_ecc_quirk && !req->datalen)
 		spinand_ecc_enable(spinand, false);
 
 	while (nbytes) {
@@ -895,6 +895,8 @@ int spinand_match_and_init(struct spinand_device *spinand,
 					       info->op_variants.update_cache);
 		spinand->op_templates.update_cache = op;
 
+		spinand->onchip_ecc_quirk = info->onchip_ecc_quirk;
+
 		return 0;
 	}
 
diff --git a/drivers/mtd/nand/spi/winbond.c b/drivers/mtd/nand/spi/winbond.c
index 4f09f3a57..135430832 100644
--- a/drivers/mtd/nand/spi/winbond.c
+++ b/drivers/mtd/nand/spi/winbond.c
@@ -89,7 +89,8 @@ static const struct spinand_info winbond_spinand_table[] = {
 					      &update_cache_variants),
 		     0,
 		     SPINAND_ECCINFO(&w25m02gv_ooblayout, NULL),
-		     SPINAND_SELECT_TARGET(w25m02gv_select_target)),
+		     SPINAND_SELECT_TARGET(w25m02gv_select_target)
+			 .onchip_ecc_quirk = 1),
 	SPINAND_INFO("W25N01GV", 0xAA,
 		     NAND_MEMORG(1, 2048, 64, 64, 1024, 20, 1, 1, 1),
 		     NAND_ECCREQ(1, 512),
@@ -97,7 +98,8 @@ static const struct spinand_info winbond_spinand_table[] = {
 					      &write_cache_variants,
 					      &update_cache_variants),
 		     0,
-		     SPINAND_ECCINFO(&w25m02gv_ooblayout, NULL)),
+		     SPINAND_ECCINFO(&w25m02gv_ooblayout, NULL),
+			 .onchip_ecc_quirk = 1),
 };
 
 /**
diff --git a/include/linux/mtd/spinand.h b/include/linux/mtd/spinand.h
index 4ea558bd3..0f4c49ba3 100644
--- a/include/linux/mtd/spinand.h
+++ b/include/linux/mtd/spinand.h
@@ -303,6 +303,8 @@ struct spinand_info {
 	} op_variants;
 	int (*select_target)(struct spinand_device *spinand,
 			     unsigned int target);
+
+	int onchip_ecc_quirk;
 };
 
 #define SPINAND_INFO_OP_VARIANTS(__read, __write, __update)		\
@@ -391,6 +393,8 @@ struct spinand_device {
 	u8 *scratchbuf;
 	const struct spinand_manufacturer *manufacturer;
 	void *priv;
+
+	int onchip_ecc_quirk;
 };
 
 /**
-- 
2.17.1

